KIND:     Route
VERSION:  route.openshift.io/v1

RESOURCE: spec <Object>

DESCRIPTION:
     spec is the desired state of the route

     RouteSpec describes the hostname or path the route exposes, any security
     information, and one to four backends (services) the route points to.
     Requests are distributed among the backends depending on the weights
     assigned to each backend. When using roundrobin scheduling the portion of
     requests that go to each backend is the backend weight divided by the sum
     of all of the backend weights. When the backend has more than one endpoint
     the requests that end up on the backend are roundrobin distributed among
     the endpoints. Weights are between 0 and 256 with default 1. Weight 0
     causes no requests to the backend. If all weights are zero the route will
     be considered to have no backends and return a standard 503 response. The
     `tls` field is optional and allows specific certificates or behavior for
     the route. Routers typically configure a default certificate on a wildcard
     domain to terminate routes without explicit certificates, but custom
     hostnames usually must choose passthrough (send traffic directly to the
     backend via the TLS Server-Name- Indication field) or provide a
     certificate.

FIELDS:
   alternateBackends	<[]Object>
     alternateBackends allows up to 3 additional backends to be assigned to the
     route. Only the Service kind is allowed, and it will be defaulted to
     Service. Use the weight field in RouteTargetReference object to specify
     relative preference.

   host	<string> -required-
     host is an alias/DNS that points to the service. Optional. If not specified
     a route name will typically be automatically chosen. Must follow DNS952
     subdomain conventions.

   path	<string>
     Path that the router watches for, to route traffic for to the service.
     Optional

   port	<Object>
     If specified, the port to be used by the router. Most routers will use all
     endpoints exposed by the service by default - set this value to instruct
     routers which port to use.

   tls	<Object>
     The tls field provides the ability to configure certificates and
     termination for the route.

   to	<Object> -required-
     to is an object the route should use as the primary backend. Only the
     Service kind is allowed, and it will be defaulted to Service. If the weight
     field (0-256 default 1) is set to zero, no traffic will be sent to this
     backend.

   wildcardPolicy	<string>
     Wildcard policy if any for the route. Currently only 'Subdomain' or 'None'
     is allowed.

